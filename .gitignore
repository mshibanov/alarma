import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler
import requests
from bs4 import BeautifulSoup

# –í–∫–ª—é—á–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–í–û–ô!)
BOT_TOKEN = "YOUR_BOT_TOKEN_HERE"

# –ö–ª—é—á–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ (ConversationHandler)
AUTOSTART, CONTROL, GPS, PHONE = range(4)

# –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (–≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ë–î)
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ CRM
def send_to_crm(phone_number):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ CRM —á–µ—Ä–µ–∑ –≤–µ–±-—Ñ–æ—Ä–º—É"""
    url = "https://ya7auto.ru/crm/form/iframe/4/"
    form_data = {
        'phone': phone_number
    }
    try:
        response = requests.post(url, data=form_data)
        if response.status_code == 200:
            logging.info(f"–ù–æ–º–µ—Ä {phone_number} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ CRM.")
            return True
        else:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ CRM. –ö–æ–¥: {response.status_code}")
            return False
    except Exception as e:
        logging.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ CRM: {e}")
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö (–∫—ç—à–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ)
def get_products_from_table():
    """–ü–∞—Ä—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö —Å —Å–∞–π—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π"""
    url = "https://ya7auto.ru/auto-security/car-alarms/"
    try:
        response = requests.get(url)
        soup = BeautifulSoup(response.text, 'html.parser')

        products = []
        # –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä. –°–µ–ª–µ–∫—Ç–æ—Ä—ã –Ω—É–∂–Ω–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—É—é HTML-—Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞!
        # –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—É –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        product_cards = soup.find_all('div', class_='product-card')  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä

        for card in product_cards:
            try:
                name_elem = card.find('h3')
                link_elem = card.find('a')
                # ... –ø–∞—Ä—Å–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∞–≤—Ç–æ–∑–∞–ø—É—Å–∫, –±—Ä–µ–ª–æ–∫, GSM, GPS) –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏
                # –≠—Ç–æ —Å–ª–æ–∂–Ω–∞—è –∏ –Ω–µ–Ω–∞–¥–µ–∂–Ω–∞—è —á–∞—Å—Ç—å –±–µ–∑ —Ç–æ—á–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤.

                product = {
                    'name': name_elem.text.strip() if name_elem else "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
                    'link': link_elem['href'] if link_elem else "#",
                    'autostart': 1, # –ó–∞–≥–ª—É—à–∫–∏
                    'remote': 1,
                    'gsm': 0,
                    'gps': 0
                }
                products.append(product)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞: {e}")
                continue

        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∂–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        if not products:
            products = [
                {'name': 'Pandora DX-40R', 'autostart': 0, 'remote': 1, 'gsm': 0, 'gps': 0, 'link': 'https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40r/'},
                {'name': 'Pandora DX-40RS', 'autostart': 1, 'remote': 1, 'gsm': 0, 'gps': 0, 'link': 'https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40rs/'},
                # ... –í—Å—Ç–∞–≤—å—Ç–µ –í–ï–°–¨ –æ—Å—Ç–∞–ª—å–Ω–æ–π —Å–ø–∏—Å–æ–∫ –∏–∑ –∑–∞–¥–∞–Ω–∏—è –∑–¥–µ—Å—å
                {'name': 'StarLine S96 V2 LTE GPS', 'autostart': 1, 'remote': 0, 'gsm': 1, 'gps': 1, 'link': 'https://ya7auto.ru/auto-security/car-alarms/starline-s96-v2-lte-gps/'}
            ]
        return products

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ø–∏—Å–æ–∫.")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∂–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        return [
            {'name': 'Pandora DX-40R', 'autostart': 0, 'remote': 1, 'gsm': 0, 'gps': 0, 'link': 'https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40r/'},
            # ... –í—Å—Ç–∞–≤—å—Ç–µ –í–ï–°–¨ –æ—Å—Ç–∞–ª—å–Ω–æ–π —Å–ø–∏—Å–æ–∫ –∏–∑ –∑–∞–¥–∞–Ω–∏—è –∑–¥–µ—Å—å
            {'name': 'StarLine S96 V2 LTE GPS', 'autostart': 1, 'remote': 0, 'gsm': 1, 'gps': 1, 'link': 'https://ya7auto.ru/auto-security/car-alarms/starline-s96-v2-lte-gps/'}
        ]

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
PRODUCTS_DATA = get_products_from_table()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –æ–ø—Ä–æ—Å, –∑–∞–¥–∞–µ—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å."""
    user = update.message.from_user
    await update.message.reply_text(
        f"–°–æ–æ–±—â–µ–Ω–∏–µ 1.1 üëãüèª –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, {user.first_name}!\n\n"
        "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è!\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 1.2 ü¶æ –î–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 1.3 ‚òÄÔ∏è –ü–æ–¥–∞–≤–ª—è—é—â–µ–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤—ã–±–∏—Ä–∞—é—Ç —Å–∏—Å—Ç–µ–º—É —Å –≥–ª–∞–≤–Ω–æ–π —Ü–µ–ª—å—é ‚Äî —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è.\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 1.4 –í –Ω–∞—à–µ–º –∫–ª–∏–º–∞—Ç–µ –ø—Ä–æ–≥—Ä–µ–≤ –¥–≤–∏–≥–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –ø–æ–µ–∑–¥–∫–æ–π ‚Äî —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å. –î–∞–∂–µ –ø—Ä–∏ –Ω–µ–±–æ–ª—å—à–æ–º –º–∏–Ω—É—Å–µ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∂–∞–µ—Ç –∏–∑–Ω–æ—Å –º–æ—Ç–æ—Ä–∞.\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 1.5 –ù—É –∏ –∫–æ–Ω–µ—á–Ω–æ, —Å–∞–¥–∏—Ç—å—Å—è –≤ —É–∂–µ —Ç—ë–ø–ª—ã–π –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Å–∞–ª–æ–Ω ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ.\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 1.6 –ö–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞—Å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ?",
        reply_markup=ReplyKeyboardMarkup(
            [["–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º", "–ë–ï–ó –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"]],
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )
    return AUTOSTART

async def autostart_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∏ –∑–∞–¥–∞–µ—Ç –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å."""
    choice = update.message.text
    user_data[update.message.from_user.id] = {'autostart': 1 if choice == '–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º' else 0}

    await update.message.reply_text(
        "–°–æ–æ–±—â–µ–Ω–∏–µ 2.1 üì° –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º —Å–ø–æ—Å–æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 2.2 üôÑ –ï—Å—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –±—Ä–µ–ª–æ–∫–∞ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏. –ï–≥–æ –º–∏–Ω—É—Å –≤ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–º —Å–∏–≥–Ω–∞–ª–µ: –µ—Å—Ç—å —Ä–∏—Å–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ —Ç—Ä–µ–≤–æ–≥–µ. –ü–æ—ç—Ç–æ–º—É –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞.\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 2.3 ‚ò∫Ô∏è –ß–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç—ã —Å–º–æ–∂–µ—à—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –∞–≤—Ç–æ, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Å—Ç–∞—Ç—É—Å, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –¥–∞—Ç—á–∏–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —Ç—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∏—à—å –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ª—é–±–æ–º –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–∏, –≥–¥–µ –±—ã —Ç—ã –Ω–∏ –±—ã–ª.\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 2.4 –ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–æ–π?",
        reply_markup=ReplyKeyboardMarkup(
            [["üòé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ", "üì∫ –ë—Ä–µ–ª–æ–∫"]],
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )
    return CONTROL

async def control_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –∑–∞–¥–∞–µ—Ç —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å."""
    choice = update.message.text
    user_data[update.message.from_user.id]['control'] = 'app' if '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' in choice else 'remote'

    await update.message.reply_text(
        "–°–æ–æ–±—â–µ–Ω–∏–µ 3.1 üî• –û—Ç–ª–∏—á–Ω–æ! –ú—ã –ø–æ—á—Ç–∏ –ø–æ–¥–æ–±—Ä–∞–ª–∏ —Ç–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É. –û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥.\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 3.2 –ï—Å–ª–∏ —Ç—ã —á–∞—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—à—å –∫–ª—é—á–∏ –¥—Ä—É–≥–∏–º –ª—é–¥—è–º –∏–ª–∏ —Ç–µ–±–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º GPS-–º–æ–¥—É–ª–µ–º.\n\n"
        "–°–æ–æ–±—â–µ–Ω–∏–µ 3.3 –û–Ω –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–∏–¥–µ—Ç—å —Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã, –∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –µ–µ –ø–æ–µ–∑–¥–∫–∏.\n\n"
        "–ù—É–∂–µ–Ω –ª–∏ –≤–∞–º GPS-–º–æ–¥—É–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è?",
        reply_markup=ReplyKeyboardMarkup(
            [["–î–∞, –Ω—É–∂–µ–Ω GPS", "–ù–µ—Ç, –Ω–µ –Ω—É–∂–µ–Ω"]],
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )
    return GPS

async def gps_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä GPS, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω."""
    choice = update.message.text
    user_data[update.message.from_user.id]['gps'] = 1 if '–î–∞' in choice else 0

    user_prefs = user_data[update.message.from_user.id]
    recommended_products = []

    # –õ–æ–≥–∏–∫–∞ –ø–æ–¥–±–æ—Ä–∞: –∏—â–µ–º —Å–∏—Å—Ç–µ–º—ã, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for product in PRODUCTS_DATA:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
        if user_prefs['autostart'] == 1 and product['autostart'] == 0:
            continue
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –Ω—É–∂–µ–Ω GSM –º–æ–¥—É–ª—å (gsm=1)
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª –±—Ä–µ–ª–æ–∫, —Ç–æ –ø–æ–¥–æ–π–¥–µ—Ç –∏ —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑ GSM (gsm=0 –∏–ª–∏ 1)
        if user_prefs['control'] == 'app' and product['gsm'] == 0:
            continue
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º GPS
        if user_prefs['gps'] == 1 and product['gps'] == 0:
            continue

        recommended_products.append(product)
        # –û–≥—Ä–∞–Ω–∏—á–∏–º—Å—è –¥–≤—É–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
        if len(recommended_products) == 2:
            break

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    if recommended_products:
        message_text = "–í–æ—Ç –æ—Ç–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≤–∞—Å:\n\n"
        for prod in recommended_products:
            message_text += f"‚Ä¢ <a href='{prod['link']}'>{prod['name']}</a>\n"
        message_text += "\n–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    else:
        message_text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–∞–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–∏—Å—Ç–µ–º. –û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –ø–æ–¥–±–æ—Ä–æ–º –≤—Ä—É—á–Ω—É—é."

    await update.message.reply_text(message_text, parse_mode='HTML')

    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞.",
        reply_markup=ReplyKeyboardMarkup(
            [[KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä", request_contact=True)]],
            one_time_keyboard=True,
            resize_keyboard=True
        ),
    )
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ CRM."""
    phone_number = None

    if update.message.contact:
        phone_number = update.message.contact.phone_number
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é
        phone_number = update.message.text

    if phone_number:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –≤ CRM
        success = send_to_crm(phone_number)
        if success:
            await update.message.reply_text(
                "–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä –ø—Ä–∏–Ω—è—Ç. –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!",
                reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            )
        else:
            await update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º."
            )
    else:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –Ω–æ–º–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –æ–ø—Ä–æ—Å."""
    await update.message.reply_text('–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start.')
    return ConversationHandler.END

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    # –°–æ–∑–¥–∞–µ–º Application –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    application = Application.builder().token(BOT_TOKEN).build()

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞ (ConversationHandler)
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            AUTOSTART: [MessageHandler(filters.Regex("^(–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º|–ë–ï–ó –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º)$"), autostart_choice)],
            CONTROL: [MessageHandler(filters.Regex("^(üòé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ|üì∫ –ë—Ä–µ–ª–æ–∫)$"), control_choice)],
            GPS: [MessageHandler(filters.Regex("^(–î–∞, –Ω—É–∂–µ–Ω GPS|–ù–µ—Ç, –Ω–µ –Ω—É–∂–µ–Ω)$"), gps_choice)],
            PHONE: [
                MessageHandler(filters.CONTACT, get_phone),
                MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
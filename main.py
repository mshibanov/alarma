import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, ConversationHandler, filters
import requests
from bs4 import BeautifulSoup

# –í–∫–ª—é—á–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
AUTO_START, CONTROL_METHOD, GPS_NEEDED, RESULT = range(4)

# –í–∞—à–∞ —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π)
PRODUCTS = [
    {"name": "Pandora DX-40R", "autostart": 0, "remote": 1, "gsm": 0, "gps": 0, "url": "https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40r/"},
    {"name": "Pandora DX-40RS", "autostart": 1, "remote": 1, "gsm": 0, "gps": 0, "url": "https://ya7auto.ru/auto-security/car-alarms/pandora-dx-40rs/"},
    # ... –í–°–¢–ê–í–¨–¢–ï –°–Æ–î–ê –í–°–ï –û–°–¢–ê–õ–¨–ù–´–ï –£–°–¢–†–û–ô–°–¢–í–ê –ò–ó –í–ê–®–ï–ô –¢–ê–ë–õ–ò–¶–´ ...
    {"name": "StarLine S96 V2 LTE GPS", "autostart": 1, "remote": 0, "gsm": 1, "gps": 1, "url": "https://ya7auto.ru/auto-security/car-alarms/starline-s96-v2-lte-gps/"}
]

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞
reply_keyboard_auto = [["–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º", "–ë–ï–ó –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"]]
reply_keyboard_control = [["üòé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ", "üì∫ –ë—Ä–µ–ª–æ–∫"]]
reply_keyboard_gps = [["–î–∞, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è", "–ù–µ—Ç, –Ω–µ –Ω—É–∂–Ω–æ"]]

markup_auto = ReplyKeyboardMarkup(reply_keyboard_auto, one_time_keyboard=True, resize_keyboard=True)
markup_control = ReplyKeyboardMarkup(reply_keyboard_control, one_time_keyboard=True, resize_keyboard=True)
markup_gps = ReplyKeyboardMarkup(reply_keyboard_gps, one_time_keyboard=True, resize_keyboard=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
def find_products(autostart, remote, gps_needed):
    """
    –ò—â–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    autostart: 1 - –Ω—É–∂–µ–Ω, 0 - –Ω–µ –Ω—É–∂–µ–Ω
    remote: 1 - –±—Ä–µ–ª–æ–∫, 0 - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (GSM)
    gps_needed: 1 - –Ω—É–∂–µ–Ω GPS, 0 - –Ω–µ –Ω—É–∂–µ–Ω
    """
    matched_products = []
    for product in PRODUCTS:
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏. product['gsm'] —ç—Ç–æ 1 –µ—Å–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–Ω–µ –±—Ä–µ–ª–æ–∫)
        if (product['autostart'] == autostart and
            product['remote'] == remote and
            product['gps'] == gps_needed):
            # –î–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º (GSM) –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å GPS
            if remote == 0:
                if gps_needed == product['gps']:
                    matched_products.append(product)
            else:
                # –î–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å –±—Ä–µ–ª–æ–∫–æ–º GPS –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü–µ
                matched_products.append(product)
    return matched_products[:2]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–µ –±–æ–ª–µ–µ 2 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ü–µ–Ω—ã –ø–æ URL (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç BeautifulSoup)
def fetch_product_info(url):
    """–ü—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã."""
    try:
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'}
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω

        soup = BeautifulSoup(response.text, 'html.parser')

        # –°–µ–ª–µ–∫—Ç–æ—Ä—ã –Ω—É–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞!
        # –≠–¢–û –ü–†–ò–ú–ï–†. –ò–• –ù–£–ñ–ù–û –ù–ê–°–¢–†–û–ò–¢–¨, –ò–°–ü–û–õ–¨–ó–£–Ø –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê –í –ë–†–ê–£–ó–ï–†–ï.
        title_selector = "h1.product-card-top__title" 
        price_selector = "span.product-card-top__price"

        title_element = soup.select_one(title_selector)
        price_element = soup.select_one(price_selector)

        title = title_element.get_text(strip=True) if title_element else "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        price = price_element.get_text(strip=True) if price_element else "–¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

        return f"{title} - {price}"

    except requests.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ {url}: {e}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ."
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ {url}: {e}")
        return "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞."

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∏–Ω–∞–µ—Ç –æ–ø—Ä–æ—Å, –∑–∞–¥–∞–µ—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å."""
    user = update.message.from_user
    await update.message.reply_text(
        f"üëãüèª –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, {user.first_name}!\n\n"
        "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è!\n\n"
        "ü¶æ –î–∞–≤–∞–π –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏\n\n"
        "‚òÄÔ∏è –ü–æ–¥–∞–≤–ª—è—é—â–µ–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤—ã–±–∏—Ä–∞—é—Ç —Å–∏—Å—Ç–µ–º—É —Å –≥–ª–∞–≤–Ω–æ–π —Ü–µ–ª—å—é ‚Äî —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è.\n\n"
        "–í –Ω–∞—à–µ–º –∫–ª–∏–º–∞—Ç–µ –ø—Ä–æ–≥—Ä–µ–≤ –¥–≤–∏–≥–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –ø–æ–µ–∑–¥–∫–æ–π ‚Äî —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å. –î–∞–∂–µ –ø—Ä–∏ –Ω–µ–±–æ–ª—å—à–æ–º –º–∏–Ω—É—Å–µ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∂–∞–µ—Ç –∏–∑–Ω–æ—Å –º–æ—Ç–æ—Ä–∞.\n\n"
        "–ù—É –∏ –∫–æ–Ω–µ—á–Ω–æ, —Å–∞–¥–∏—Ç—å—Å—è –≤ —É–∂–µ —Ç—ë–ø–ª—ã–π –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Å–∞–ª–æ–Ω ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ.\n\n"
        "–ö–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞—Å –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ?",
        reply_markup=markup_auto
    )
    return AUTO_START

async def auto_start_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∏ –∑–∞–¥–∞–µ—Ç –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å."""
    user_choice = update.message.text
    context.user_data['autostart'] = 1 if user_choice == "–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º" else 0

    await update.message.reply_text(
        "üì° –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≤—ã–±–µ—Ä–µ–º —Å–ø–æ—Å–æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n\n"
        "üôÑ –ï—Å—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥ ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –±—Ä–µ–ª–æ–∫–∞ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏. –ï–≥–æ –º–∏–Ω—É—Å –≤ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–º —Å–∏–≥–Ω–∞–ª–µ: –µ—Å—Ç—å —Ä–∏—Å–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ —Ç—Ä–µ–≤–æ–≥–µ. –ü–æ—ç—Ç–æ–º—É –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞.\n\n"
        "‚ò∫Ô∏è –ß–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç—ã —Å–º–æ–∂–µ—à—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –∞–≤—Ç–æ, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Å—Ç–∞—Ç—É—Å, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –¥–∞—Ç—á–∏–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. –ì–ª–∞–≤–Ω–æ–µ ‚Äî —Ç—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∏—à—å –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ª—é–±–æ–º –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–∏, –≥–¥–µ –±—ã —Ç—ã –Ω–∏ –±—ã–ª.\n\n"
        "–ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–æ–º?",
        reply_markup=markup_control
    )
    return CONTROL_METHOD

async def control_method_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –∑–∞–¥–∞–µ—Ç —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å."""
    user_choice = update.message.text
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Ç–æ remote=0 (–±—Ä–µ–ª–æ–∫ –Ω–µ –Ω—É–∂–µ–Ω), –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.
    context.user_data['remote'] = 1 if user_choice == "üì∫ –ë—Ä–µ–ª–æ–∫" else 0

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Å–ø—Ä–æ—Å–∏–º –ø—Ä–æ GPS.
    if context.user_data['remote'] == 0:
        await update.message.reply_text(
            "üî• –û—Ç–ª–∏—á–Ω–æ! –ú—ã –ø–æ—á—Ç–∏ –ø–æ–¥–æ–±—Ä–∞–ª–∏ —Ç–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É. –û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥.\n\n"
            "–ï—Å–ª–∏ —Ç—ã —á–∞—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—à—å –∫–ª—é—á–∏ –¥—Ä—É–≥–∏–º –ª—é–¥—è–º –∏–ª–∏ —Ç–µ–±–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º GPS-–º–æ–¥—É–ª–µ–º.\n\n"
            "–û–Ω –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–∏–¥–µ—Ç—å —Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã, –∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –µ–µ –ø–æ–µ–∑–¥–∫–∏.\n\n"
            "–ù—É–∂–Ω–∞ –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è GPS-–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è?",
            reply_markup=markup_gps
        )
        return GPS_NEEDED
    else:
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –±—Ä–µ–ª–æ–∫, GPS –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º (—Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∞–±–ª–∏—Ü–µ)
        context.user_data['gps'] = 0
        return await show_results(update, context)

async def gps_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ GPS."""
    user_choice = update.message.text
    context.user_data['gps'] = 1 if user_choice == "–î–∞, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è" else 0
    return await show_results(update, context)

async def show_results(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ò—â–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    user_data = context.user_data
    autostart = user_data.get('autostart', 0)
    remote = user_data.get('remote', 0)
    gps = user_data.get('gps', 0)

    recommended_products = find_products(autostart, remote, gps)

    if not recommended_products:
        await update.message.reply_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–∏—Å—Ç–µ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞.")
        return ConversationHandler.END

    message_text = "–í–æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è –≤–∞—Å –≤–∞—Ä–∏–∞–Ω—Ç—ã:\n\n"
    for product in recommended_products:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
        product_info = fetch_product_info(product['url'])
        message_text += f"‚Ä¢ <a href='{product['url']}'>{product['name']}</a>\n{product_info}\n\n"

    message_text += (
        "\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. "
        "–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
        "üëá –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä."
    )

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞
    contact_keyboard = [[KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)]]
    contact_markup = ReplyKeyboardMarkup(contact_keyboard, one_time_keyboard=True, resize_keyboard=True)

    await update.message.reply_text(message_text, reply_markup=contact_markup, parse_mode='HTML')
    return RESULT

async def received_contact(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ CRM."""
    phone_number = update.message.contact.phone_number
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä (—É–±–∏—Ä–∞–µ–º –ø–ª—é—Å –¥–ª—è —Ñ–æ—Ä–º—ã)
    formatted_phone = phone_number.lstrip('+')

    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ñ–æ—Ä–º—É CRM
    form_data = {
        '–¢–µ–ª–µ—Ñ–æ–Ω': formatted_phone
    }

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ URL –≤–∞—à–µ–π —Ñ–æ—Ä–º—ã
        response = requests.post('https://ya7auto.ru/crm/form/iframe/4/', data=form_data)
        if response.status_code == 200:
            await update.message.reply_text(
                "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä –ø—Ä–∏–Ω—è—Ç. –ú—ã —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞—è–≤–∫—É, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
                reply_markup=ReplyKeyboardMarkup([[]], resize_keyboard=True)  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            )
        else:
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–º–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except requests.RequestException:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text('–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –ï—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start.')
    return ConversationHandler.END

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    # –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather
    application = Application.builder().token("YOUR_BOT_TOKEN").build()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ConversationHandler
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            AUTO_START: [MessageHandler(filters.Regex("^(–° –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–æ–º|–ë–ï–ó –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞)$"), auto_start_choice)],
            CONTROL_METHOD: [MessageHandler(filters.Regex("^(üòé –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ|üì∫ –ë—Ä–µ–ª–æ–∫)$"), control_method_choice)],
            GPS_NEEDED: [MessageHandler(filters.Regex("^(–î–∞, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è|–ù–µ—Ç, –Ω–µ –Ω—É–∂–Ω–æ)$"), gps_choice)],
            RESULT: [MessageHandler(filters.CONTACT, received_contact)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
    application.run_polling()

if __name__ == '__main__':
    main()